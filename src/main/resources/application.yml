spring:
  sql:
    init:
      mode: always

#
#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: ${USERNAME}
#    password: ${MAIL_PASSWORD}
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true

  servlet:
    multipart:
      enabled: true
      max-file-size: 2MB  # 파일 최대 크기 설정
      max-request-size: 2MB  # 요청 최대 크기 설정

  profiles:
    active:
      - secret

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true
    username: ${MYSQL_ROOT_USER}
    password: ${MYSQL_ROOT_PASSWORD}






  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQLDialect

  jwt:
    secret: vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb

  data:
    redis:
      host: localhost
      port: 6379

  batch:
    jdbc:
      initialize-schema: always

management:
  endpoints:
    web:
      exposure:
        include: "*"


slack:
  webhook:
    url: ${WEBHOOK_SLACK_URL}

logging:
  pattern:
    console: "[%d{HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
    file: "[%d{yyyy-MM-dd HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
  level:
    com.example.log: debug
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 7
  file:
    name: ./log/server.log

  management:
    endpoints:
      web:
        exposure:
          include: "prometheus"